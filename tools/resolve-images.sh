#!/usr/bin/env bash
set -Eeuo pipefail
shopt -s lastpipe 2>/dev/null || true

# Strict IFS for safer word splitting
IFS=$nt

# Reads versions.env and writes .env.images with FOO_IMAGE=repo:tag or repo@sha256:digest

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
VERSIONS="${VERSIONS_ENV:-$ROOT_DIR/versions.env}"
OUT="${OUT_ENV:-$ROOT_DIR/.env.images}"

[[ -f "$VERSIONS" ]] || { echo "versions.env not found at $VERSIONS"; exit 1; }

# Load key/values (no export) â€“ safe import (ignore comments/blank)
# shellcheck disable=SC2046
set -a
. <(grep -E '^[A-Za-z_][A-Za-z0-9_]*=.*$' "$VERSIONS" | sed 's/\r$//')
set +a

# Find all *_IMAGE_REPO variables
prefixes=()
while IFS='=' read -r key val; do
  if [[ "$key" =~ ^([A-Z0-9_]+)_IMAGE_REPO$ ]]; then
    prefixes+=("${BASH_REMATCH[1]}")
  fi
done < <(grep -E '^[A-Za-z_][A-Za-z0-9_]*=.*$' "$VERSIONS")

mkdir -p "$(dirname "$OUT")"
: > "$OUT"
{
  echo "# Generated by tools/resolve-images.sh at $(date -Is)"
  echo "# Do not edit; source from deploy.sh / Compose interpolation"
  echo
} >> "$OUT"

fail=0
for p in "${prefixes[@]}"; do
  repo_var="${p}_IMAGE_REPO"
  tag_var="${p}_IMAGE_TAG"
  dig_var="${p}_IMAGE_DIGEST"
  out_var="${p}_IMAGE"

  repo="${!repo_var:-}"
  tag="${!tag_var:-}"
  dig="${!dig_var:-}"

  if [[ -z "$repo" ]]; then
    echo "ERROR: $repo_var is unset/empty" >&2
    fail=1; continue
  fi

  if [[ -n "$tag" && -n "$dig" ]]; then
    echo "ERROR: Both $tag_var and $dig_var set for prefix $p (choose one)" >&2
    fail=1; continue
  fi

  if [[ -n "$dig" ]]; then
    if [[ ! "$dig" =~ ^sha256:[0-9a-fA-F]{64}$ ]]; then
      echo "ERROR: $dig_var must be sha256:<64-hex>" >&2
      fail=1; continue
    fi
    image="${repo}@${dig}"
  elif [[ -n "$tag" ]]; then
    image="${repo}:${tag}"
  else
    tag="latest"
    echo "WARNING: Neither $tag_var nor $dig_var set for prefix $p, defaulting to tag '$tag'" >&2
    image="${repo}:${tag}"
  fi

  echo "${out_var}=${image}" >> "$OUT"
done

(( fail == 0 )) || { echo "One or more image resolutions failed"; exit 2; }

