# ============================================================================
# GENERATED COMPOSE FILE - DO NOT EDIT MANUALLY
# -----------------------------------------------------------------------------
# Generated by: deploy.sh
# Generated at: 2025-09-03T15:09:24Z UTC
# Compose Engine: docker
# Engine Version: Docker Compose version v2.39.1
# Schema Version: 3.8
# Validation: PASSED
# -----------------------------------------------------------------------------
# This file was generated for docker with schema version 3.8.
# If you encounter compatibility issues, verify your compose engine version.
# ============================================================================

# ============================================================================
# GENERATED COMPOSE FILE - DO NOT EDIT MANUALLY
# -----------------------------------------------------------------------------
# Generated by: deploy.sh
# Generated at: 2025-09-03T15:08:26Z UTC
# Compose Engine: docker
# Engine Version: Docker Compose version v2.39.1
# Schema Version: 3.8
# Validation: PASSED
# -----------------------------------------------------------------------------
# This file was generated for docker with schema version 3.8.
# If you encounter compatibility issues, verify your compose engine version.
# ============================================================================

# ============================================================================
# GENERATED COMPOSE FILE - DO NOT EDIT MANUALLY
# -----------------------------------------------------------------------------
# Generated by: deploy.sh
# Generated at: 2025-09-03T15:07:34Z UTC
# Compose Engine: docker
# Engine Version: Docker Compose version v2.39.1
# Schema Version: 3.8
# Validation: PASSED
# -----------------------------------------------------------------------------
# This file was generated for docker with schema version 3.8.
# If you encounter compatibility issues, verify your compose engine version.
# ============================================================================

# ============================================================================
# GENERATED COMPOSE FILE - DO NOT EDIT MANUALLY
# -----------------------------------------------------------------------------
# Generated by: deploy.sh
# Generated at: 2025-09-03T15:06:43Z UTC
# Compose Engine: docker
# Engine Version: Docker Compose version v2.39.1
# Schema Version: 3.8
# Validation: PASSED
# -----------------------------------------------------------------------------
# This file was generated for docker with schema version 3.8.
# If you encounter compatibility issues, verify your compose engine version.
# ============================================================================

# ============================================================================
# GENERATED COMPOSE FILE - DO NOT EDIT MANUALLY
# -----------------------------------------------------------------------------
# Generated by: deploy.sh
# Generated at: 2025-09-03T15:01:25Z UTC
# Compose Engine: docker
# Engine Version: Docker Compose version v2.39.1
# Schema Version: 3.8
# Validation: PASSED
# -----------------------------------------------------------------------------
# This file was generated for docker with schema version 3.8.
# If you encounter compatibility issues, verify your compose engine version.
# ============================================================================

# ==============================================================================
# monitoring/prometheus/docker-compose.monitoring.yml
# Comprehensive Docker Compose configuration for Splunk monitoring stack
# ==============================================================================

version: '3.8'

services:
  # Prometheus - Metrics collection and alerting
  prometheus:
    image: "${PROMETHEUS_IMAGE}"
    container_name: splunk-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/splunk_rules.yml:/etc/prometheus/splunk_rules.yml:ro
      - prometheus_data:/prometheus
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - SPLUNK_MONITOR_USER=${SPLUNK_MONITOR_USER:-monitor}
      - SPLUNK_MONITOR_PASSWORD=${SPLUNK_MONITOR_PASSWORD:-changeme}
    networks:
      - monitoring
      - splunk_cluster
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana - Metrics visualization and dashboards
  grafana:
    image: "${GRAFANA_IMAGE}"
    container_name: splunk-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/splunk_cluster_overview.json
    networks:
      - monitoring
    depends_on:
      - prometheus

  # AlertManager - Alert routing and notifications
  alertmanager:
    image: "${PROMETHEUS_IMAGE}"
    container_name: splunk-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alerts/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./monitoring/alerts/notification_templates:/etc/alertmanager/templates:ro
      - alertmanager_data:/alertmanager
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
      - '--log.level=info'
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST:-}
      - EMAIL_FROM=${EMAIL_FROM:-alerts@company.com}
    networks:
      - monitoring

  # Node Exporter - System metrics collection
  node-exporter:
    image: "${PROMETHEUS_IMAGE}"
    container_name: splunk-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    pid: host

networks:
  monitoring:
    driver: bridge
  splunk_cluster:
    external: true
    name: splunk_cluster_network

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
