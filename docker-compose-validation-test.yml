# ------------------------------------------------------------------------------
# Auto-generated by lib/compose-generator.sh v2.0
# Generated on: 2025-08-27 17:05:51 UTC
# Runtime: unknown
# Compose: unknown
# Do not edit this file manually; it will be overwritten.
# ------------------------------------------------------------------------------
# Compose Specification (https://compose-spec.io/)

version: '3.8'

services:
# Splunk Indexer 1
splunk-idx1:
  image: "${SPLUNK_IMAGE}"
  container_name: "${COMPOSE_PROJECT_NAME:-splunk}_splunk-idx1"
  hostname: "splunk-idx1"
  restart: unless-stopped
  ports:
    - "9997:9997"  # Splunk2Splunk
    - "8088:8088"     # HTTP Event Collector
  environment:
    SPLUNK_START_ARGS: "--accept-license --answer-yes"
    SPLUNK_ROLE: "splunk_indexer"
    SPLUNK_CLUSTER_MASTER_URL: "https://splunk-cm:8089"
    SPLUNK_INDEXER_URL: "https://splunk-idx1:8089"
    SPLUNK_PASSWORD: "${SPLUNK_PASSWORD}"
    SPLUNK_SECRET: "${SPLUNK_SECRET}"
    SPLUNK_REPLICATION_FACTOR: "1"
    SPLUNK_SEARCH_FACTOR: "1"
  networks:
    - splunk-net
  volumes:
    - splunk-idx1-etc:/opt/splunk/etc
    - splunk-idx1-var:/opt/splunk/var
  profiles: ["splunk"]
  
  healthcheck:
    test: ["CMD-SHELL", "$SPLUNK_HOME/bin/splunk status || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 10
    start_period: 120s
  
  deploy:
    resources:
      limits:
        cpus: '${SPLUNK_INDEXER_CPU_LIMIT:-2.0}'
        memory: '${SPLUNK_INDEXER_MEM_LIMIT:-4G}'
      reservations:
        cpus: '${SPLUNK_INDEXER_CPU_RESERVE:-1.0}'
        memory: '${SPLUNK_INDEXER_MEM_RESERVE:-2G}'
  depends_on:
    splunk-cm:
      condition: service_healthy
  logging:
    driver: "json-file"
    options:
      max-size: "50m"
      max-file: "5"
  
# Splunk Search Head 1
splunk-sh1:
  image: "${SPLUNK_IMAGE}"
  container_name: "${COMPOSE_PROJECT_NAME:-splunk}_splunk-sh1"
  hostname: "splunk-sh1"
  restart: unless-stopped
  ports:
    - "8000:8000"  # Splunk Web
    - "8099:8089"  # Management port
  environment:
    SPLUNK_START_ARGS: "--accept-license --answer-yes"
    SPLUNK_ROLE: "splunk_search_head"
    SPLUNK_CLUSTER_MASTER_URL: "https://splunk-cm:8089"
    SPLUNK_SEARCH_HEAD_URL: "https://splunk-sh1:8089"
    SPLUNK_PASSWORD: "${SPLUNK_PASSWORD}"
    SPLUNK_SECRET: "${SPLUNK_SECRET}"
  networks:
    - splunk-net
  volumes:
    - splunk-sh1-etc:/opt/splunk/etc
    - splunk-sh1-var:/opt/splunk/var
  profiles: ["splunk"]
  
  healthcheck:
    test: ["CMD-SHELL", "curl -sf http://localhost:8000/en-US/account/login >/dev/null || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 10
    start_period: 120s
  
  deploy:
    resources:
      limits:
        cpus: '${SPLUNK_SEARCH_HEAD_CPU_LIMIT:-1.5}'
        memory: '${SPLUNK_SEARCH_HEAD_MEM_LIMIT:-2G}'
      reservations:
        cpus: '${SPLUNK_SEARCH_HEAD_CPU_RESERVE:-0.5}'
        memory: '${SPLUNK_SEARCH_HEAD_MEM_RESERVE:-1G}'
  depends_on:
    splunk-cm:
      condition: service_healthy
  logging:
    driver: "json-file"
    options:
      max-size: "50m"
      max-file: "5"
  
# Prometheus monitoring service
prometheus:
  image: "${PROMETHEUS_IMAGE}"
  container_name: "${COMPOSE_PROJECT_NAME:-myapp}_prometheus"
  restart: unless-stopped
  command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--storage.tsdb.retention.time=15d'
    - '--web.enable-lifecycle'
  ports:
    - "9090:9090"
  networks:
    - app-net
    - splunk-net
  volumes:
    - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - prometheus-data:/prometheus
  profiles: ["monitoring"]
  
  healthcheck:
    test: ["CMD-SHELL", "wget -qO- http://localhost:9090/-/healthy || exit 1"]
    interval: 20s
    timeout: 3s
    retries: 10
    start_period: 30s
  
  deploy:
    resources:
      limits:
        cpus: '${PROMETHEUS_CPU_LIMIT:-1}'
        memory: '${PROMETHEUS_MEM_LIMIT:-1G}'
      reservations:
        cpus: '${PROMETHEUS_CPU_RESERVE:-0.5}'
        memory: '${PROMETHEUS_MEM_RESERVE:-512M}'
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
# Grafana dashboard service
grafana:
  image: "${GRAFANA_IMAGE}"
  container_name: "${COMPOSE_PROJECT_NAME:-myapp}_grafana"
  restart: unless-stopped
  ports:
    - "3000:3000"
  environment:
    GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_ADMIN_PASSWORD:-admin}"
    GF_INSTALL_PLUGINS: "grafana-piechart-panel"
  networks:
    - app-net
    - splunk-net
  volumes:
    - grafana-data:/var/lib/grafana
    - ./config/grafana-provisioning/:/etc/grafana/provisioning/:ro
  profiles: ["monitoring"]
  
  healthcheck:
    test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health | grep -q 'database.*ok'"]
    interval: 20s
    timeout: 5s
    retries: 10
    start_period: 30s
  
  deploy:
    resources:
      limits:
        cpus: '${GRAFANA_CPU_LIMIT:-0.5}'
        memory: '${GRAFANA_MEM_LIMIT:-512M}'
      reservations:
        cpus: '${GRAFANA_CPU_RESERVE:-0.2}'
        memory: '${GRAFANA_MEM_RESERVE:-256M}'
  depends_on:
    prometheus:
      condition: service_healthy
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  

networks:
  app-net:
    driver: bridge
    name: "${COMPOSE_PROJECT_NAME:-myapp}_app_network"
  
  splunk-net:
    driver: bridge
    name: "${COMPOSE_PROJECT_NAME:-splunk}_cluster_network"
  

volumes:
  app-data:
    name: "${COMPOSE_PROJECT_NAME:-myapp}_app_data"
  app-logs:
    name: "${COMPOSE_PROJECT_NAME:-myapp}_app_logs"
  redis-data:
    name: "${COMPOSE_PROJECT_NAME:-myapp}_redis_data"
  
  prometheus-data:
    name: "${COMPOSE_PROJECT_NAME:-myapp}_prometheus_data"
  grafana-data:
    name: "${COMPOSE_PROJECT_NAME:-myapp}_grafana_data"
  
  
  splunk-cm-etc:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_cm_etc"
  splunk-cm-var:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_cm_var"
  splunk-idx1-etc:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_idx1_etc"
  splunk-idx1-var:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_idx1_var"
  splunk-idx2-etc:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_idx2_etc"
  splunk-idx2-var:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_idx2_var"
  splunk-sh1-etc:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_sh1_etc"
  splunk-sh1-var:
    name: "${COMPOSE_PROJECT_NAME:-splunk}_sh1_var"
  
